
{
  "entities": {
    "User": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User",
      "type": "object",
      "description": "Represents a user on the Tabdeel platform.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the user entity."
        },
        "name": {
          "type": "string",
          "description": "User's full name."
        },
        "avatarUrl": {
          "type": "string",
          "description": "URL of the user's avatar image.",
          "format": "uri"
        },
        "city": {
          "type": "string",
          "description": "User's city in Pakistan."
        },
        "bio": {
          "type": "string",
          "description": "User's biography or description."
        },
        "preferences": {
          "type": "array",
          "description": "List of category IDs representing the user's interests.",
          "items": {
            "type": "string"
          }
        },
        "createdAt": {
          "type": "string",
          "description": "Timestamp indicating when the user account was created.",
          "format": "date-time"
        },
        "lastSeen": {
          "type": "string",
          "description": "Timestamp indicating the last time the user was active on the platform.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "name",
        "createdAt"
      ]
    },
    "Item": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Item",
      "type": "object",
      "description": "Represents an item listed for barter on the Tabdeel platform.",
      "properties": {
        "ownerId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:N Item)"
        },
        "title": {
          "type": "string",
          "description": "Title of the item."
        },
        "description": {
          "type": "string",
          "description": "Detailed description of the item."
        },
        "images": {
          "type": "array",
          "description": "Array of URLs pointing to images of the item.",
          "items": {
            "type": "string"
          }
        },
        "category": {
          "type": "string",
          "description": "Category of the item."
        },
        "condition": {
          "type": "string",
          "description": "Condition of the item (e.g., Like New, Good, Fair)."
        },
        "city": {
          "type": "string",
          "description": "City where the item is located."
        },
        "desiredKeywords": {
          "type": "string",
          "description": "Keywords describing what the owner wants in exchange for the item."
        },
        "desiredCategories": {
          "type": "array",
          "description": "List of category IDs representing the items the owner desires in exchange.",
          "items": {
            "type": "string"
          }
        },
        "status": {
          "type": "string",
          "description": "Status of the item (e.g., active, exchanged, removed)."
        },
        "createdAt": {
          "type": "object",
          "description": "Timestamp indicating when the item was listed."
        },
        "updatedAt": {
          "type": "object",
          "description": "Timestamp indicating when the item was last updated."
        }
      },
      "required": [
        "ownerId",
        "title",
        "description",
        "category",
        "condition",
        "city",
        "desiredKeywords",
        "status",
        "createdAt"
      ]
    },
    "SwapRequest": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "SwapRequest",
      "type": "object",
      "description": "Represents a request to swap items between two users.",
      "properties": {
        "targetItemId": {
          "type": "string",
          "description": "Reference to Item. The item that is being requested."
        },
        "targetOwnerId": {
          "type": "string",
          "description": "Reference to User. The owner of the target item."
        },
        "requesterId": {
          "type": "string",
          "description": "Reference to User. The user making the swap request."
        },
        "offeredItemId": {
          "type": "string",
          "description": "Reference to an Item. The item offered by the requester."
        },
        "message": {
          "type": "string",
          "description": "Message from the requester to the item owner."
        },
        "status": {
          "type": "string",
          "description": "Status of the swap request (e.g., pending, accepted, declined)."
        },
        "createdAt": {
          "type": "object",
          "description": "Timestamp indicating when the swap request was created."
        },
        "updatedAt": {
          "type": "object",
          "description": "Timestamp indicating when the swap request was last updated."
        }
      },
      "required": [
        "targetItemId",
        "targetOwnerId",
        "requesterId",
        "offeredItemId",
        "status",
        "createdAt",
        "updatedAt"
      ]
    },
    "Message": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Message",
      "type": "object",
      "description": "Represents a message within a swap request's chat.",
      "properties": {
        "swapRequestId": {
          "type": "string",
          "description": "Reference to SwapRequest. The swap request this message belongs to."
        },
        "senderId": {
          "type": "string",
          "description": "Reference to User. The user who sent the message."
        },
        "text": {
          "type": "string",
          "description": "Content of the message."
        },
        "createdAt": {
          "type": "object",
          "description": "Timestamp indicating when the message was sent."
        }
      },
      "required": [
        "swapRequestId",
        "senderId",
        "text",
        "createdAt"
      ]
    },
    "Category": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Category",
      "type": "object",
      "description": "Represents a category for items.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the category."
        },
        "name": {
          "type": "string",
          "description": "Name of the category."
        },
        "description": {
          "type": "string",
          "description": "Description of the category."
        }
      },
      "required": [
        "id",
        "name"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}",
        "definition": {
          "entityName": "User",
          "schema": {
            "$ref": "#/backend/entities/User"
          },
          "description": "Stores user profile information. The 'userId' is the Firebase Auth UID.",
          "rules": {
            "read": "request.auth != null",
            "write": "request.auth.uid == userId"
          }
        }
      },
      {
        "path": "/items/{itemId}",
        "definition": {
          "entityName": "Item",
          "schema": {
            "$ref": "#/backend/entities/Item"
          },
          "description": "Stores all items available for barter on the platform."
        }
      },
      {
        "path": "/swapRequests/{swapRequestId}",
        "definition": {
          "entityName": "SwapRequest",
          "schema": {
            "$ref": "#/backend/entities/SwapRequest"
          },
          "description": "Stores swap requests. This is a top-level collection for easier querying by involved users."
        }
      },
      {
        "path": "/swapRequests/{swapRequestId}/messages/{messageId}",
        "definition": {
          "entityName": "Message",
          "schema": {
            "$ref": "#/backend/entities/Message"
          },
          "description": "Stores messages for a specific swap request. Nested for logical grouping."
        }
      },
      {
        "path": "/categories/{categoryId}",
        "definition": {
          "entityName": "Category",
          "schema": {
            "$ref": "#/backend/entities/Category"
          },
          "description": "Stores item categories."
        }
      }
    ],
    "reasoning": "The Firestore structure is designed to be secure and scalable. Key collections like 'users', 'items', and 'swapRequests' are at the top level. This allows for efficient querying across the entire dataset (e.g., fetching all items for the explore page, or all of a user's swap requests) without needing complex and costly collection group queries. Messages are nested within swap requests as they are directly tied to a specific request."
  }
}
